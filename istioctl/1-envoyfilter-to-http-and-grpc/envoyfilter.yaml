apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: health-envoyfilter
  # namespace: istio-system
spec:
  # workloadSelector:
  #   labels:
  #     app: helloserver
  configPatches:
    # The first patch adds the lua filter to the listener/http connection manager
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
            subFilter:
              name: "envoy.router"
    patch:
      operation: INSERT_BEFORE
      value: 
        name: envoy.lua
        typed_config:
          "@type": "type.googleapis.com/envoy.config.filter.http.lua.v2.Lua"
          inlineCode: |
            function envoy_on_request(request_handle)
              if request_handle:headers():get(":path") == "/" then
                request_handle:respond({[":status"] = "200"},"ok")
              end
            end

# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: health-envoyfilter
#   namespace: istio-system
# spec:
#   workloadSelector:
#     labels:
#       app: helloserver
#   configPatches:
#     # The first patch adds the lua filter to the listener/http connection manager
#   - applyTo: HTTP_FILTER
#     match:
#       context: SIDECAR_INBOUND
#       listener:
#         filterChain:
#           filter:
#             name: "envoy.http_connection_manager"
#             subFilter:
#               name: "envoy.router"
#     patch:
#       operation: INSERT_BEFORE
#       value: 
#         name: envoy.lua
#         typed_config:
#           "@type": "type.googleapis.com/envoy.config.filter.http.lua.v2.Lua"
#           inlineCode: |
#             function envoy_on_request(request_handle)
#               request_handle:respond({[":status"] = "501"},"no")
#             end

# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: health-envoyfilter
#   namespace: istio-system
# spec:
#   # workloadSelector:
#   #   labels:
#   #     app: helloserver
#   configPatches:
#     # The first patch adds the lua filter to the listener/http connection manager
#   - applyTo: HTTP_FILTER
#     match:
#       context: SIDECAR_INBOUND
#       listener:
#         portNumber: 8080
#         filterChain:
#           filter:
#             name: "envoy.http_connection_manager"
#             subFilter:
#               name: "envoy.router"
#     patch:
#       operation: INSERT_BEFORE
#       value: 
#         name: envoy.lua
#         typed_config:
#           "@type": "type.googleapis.com/envoy.config.filter.http.lua.v2.Lua"
#           inlineCode: |
#             function envoy_on_request(request_handle)
#               request_handle:respond({[":status"] = "501"},"no")
#             end

